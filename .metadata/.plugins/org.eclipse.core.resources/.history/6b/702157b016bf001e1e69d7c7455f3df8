package com.practice.kioskPj.shop.controller;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.practice.kioskPj.shop.model.service.ShopService;
import com.practice.kioskPj.shop.model.vo.Shop;


@Controller
public class ShopController {
	
	@Autowired
	private ShopService shopService;
	

	// 가게 리스트 뽑아주기
	@RequestMapping("sList.do")
	public String selectListShop(Model model) {
	    
		ArrayList<Shop> sList = shopService.selectListShop();
	    
	    model.addAttribute("sList", sList);

	    return "shop/shopList";
	}
     
	// 로그인 폼으로 이동
	@RequestMapping("loginForm.sh")
	public String enrollForm() {
		return "admin/login";
	}
	
	
	
	// 로그인
	@PostMapping("login.sh")
	public String loginMember(Shop s, HttpSession session, ModelAndView mv, HttpServletRequest request) {
		
		// 입력 값 로깅
//	    System.out.println("로그인 시도: ID = " + s.getShopId() + ", Password = " + s.getShopPwd());
//	    
//	    if (s.getShopId() == null || s.getShopId().isEmpty() || s.getShopPwd() == null || s.getShopPwd().isEmpty()) {
//	        System.out.println("로그인 실패: 입력 값 누락");
//	        session.setAttribute("alertMsg", "로그인 실패: 필요한 정보가 누락되었습니다.");
//	        return "common/errorPage";
//	    }

		Shop loginUser = shopService.loginMember(s.getShopId());
		
		if(loginUser != null) {
			session.setAttribute("loginUser", loginUser);
			return "redirect:/";
		}else {
			mv.addObject("errorMsg","로그인 실패");
			session.setAttribute("alertMsg", "로그인 실패.");
			return "common/errorPage";
		}
	}
	
	// 회원정보 리스트 불러오기
	@RequestMapping("myPage.sh")
	public ModelAndView myPageShop(@RequestParam("shopId") String shopId, ModelAndView mv) {
		
		Shop s = shopService.selectMyPage(userId);

		mv.addObject("s",s).setViewName("admin/myPage");
		
		System.out.println("Received shopId: " + shopId);
		
		return mv;
	}
	
	
	// 로그아웃
	@RequestMapping("logout.sh")
	public String logoutMember(HttpSession session) {

		session.removeAttribute("loginUser");
		session.setAttribute("alertMsg", "로그아웃 되었습니다.");
		return "redirect:/";
	}
	
	
	
	
	
	

}
